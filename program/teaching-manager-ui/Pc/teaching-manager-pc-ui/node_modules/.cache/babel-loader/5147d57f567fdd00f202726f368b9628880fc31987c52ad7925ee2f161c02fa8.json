{"ast":null,"code":"import axios from 'axios';\n// import Vue from 'vue'\nimport { Loading } from 'element-ui';\nimport { getUserLoginToken } from '@/utils/storage.js';\n// import router from '@/router/index.js'\n\n// const token = getUserLoginToken()\n\n//自定义加载界面的选项\nconst options = {\n  lock: true,\n  background: 'rgba(20, 20, 20, 0.6)'\n};\nconst requst = axios.create({\n  // baseURL: 'http://10.157.77.168:8080/',\n  // baseURL: 'http://175.178.41.55:8080/',\n  baseURL: 'http://127.0.0.1:8080/',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 添加请求拦截器\nrequst.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  Loading.service(options);\n  // config.headers('X-token') = getUserLoginToken()\n  config.headers.Authorization = getUserLoginToken();\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  console.log(error);\n  // return Promise.reject(error);\n});\n\n// 添加响应拦截器\nrequst.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么\n  Loading.service(options).close();\n  // if (response.data.message === 'NOT_LOGIN') {\n\n  // }\n  return response;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  if (error.response.data.message === 'NOT_LOGIN') {\n    Loading.service(options).close();\n    return error.response;\n  }\n  return Promise.reject(error);\n});\nexport default requst;","map":{"version":3,"names":["axios","Loading","getUserLoginToken","options","lock","background","requst","create","baseURL","timeout","headers","interceptors","request","use","config","service","Authorization","error","console","log","response","close","data","message","Promise","reject"],"sources":["D:/courses/web/教务系统/program/teaching-manager-ui/Pc/teaching-manager-pc-ui/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\n// import Vue from 'vue'\r\nimport { Loading } from 'element-ui'\r\nimport { getUserLoginToken } from '@/utils/storage.js'\r\n// import router from '@/router/index.js'\r\n\r\n// const token = getUserLoginToken()\r\n\r\n//自定义加载界面的选项\r\nconst options = {\r\n  lock: true,\r\n  background: 'rgba(20, 20, 20, 0.6)'\r\n}\r\n\r\n\r\nconst requst =  axios.create({\r\n    // baseURL: 'http://10.157.77.168:8080/',\r\n    // baseURL: 'http://175.178.41.55:8080/',\r\n    baseURL: 'http://127.0.0.1:8080/',\r\n    timeout: 5000,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\n// 添加请求拦截器\r\nrequst.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    Loading.service(options)\r\n    // config.headers('X-token') = getUserLoginToken()\r\n    config.headers.Authorization = getUserLoginToken()\r\n    return config;\r\n  }, function (error) {\r\n    // 对请求错误做些什么\r\n    console.log(error)\r\n    // return Promise.reject(error);\r\n  });\r\n\r\n// 添加响应拦截器\r\nrequst.interceptors.response.use(function (response) {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    Loading.service(options).close()\r\n    // if (response.data.message === 'NOT_LOGIN') {\r\n\r\n    // }\r\n    return response;\r\n  }, function (error) {\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    if (error.response.data.message === 'NOT_LOGIN') {\r\n      Loading.service(options).close()\r\n      return error.response\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  export default requst"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD;;AAEA;;AAEA;AACA,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;AACd,CAAC;AAGD,MAAMC,MAAM,GAAIN,KAAK,CAACO,MAAM,CAAC;EACzB;EACA;EACAC,OAAO,EAAE,wBAAwB;EACjCC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAJ,MAAM,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAC9C;EACAb,OAAO,CAACc,OAAO,CAACZ,OAAO,CAAC;EACxB;EACAW,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAGd,iBAAiB,CAAC,CAAC;EAClD,OAAOY,MAAM;AACf,CAAC,EAAE,UAAUG,KAAK,EAAE;EAClB;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB;AACF,CAAC,CAAC;;AAEJ;AACAX,MAAM,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAAC,UAAUO,QAAQ,EAAE;EACjD;EACA;EACAnB,OAAO,CAACc,OAAO,CAACZ,OAAO,CAAC,CAACkB,KAAK,CAAC,CAAC;EAChC;;EAEA;EACA,OAAOD,QAAQ;AACjB,CAAC,EAAE,UAAUH,KAAK,EAAE;EAClB;EACA;EACA,IAAIA,KAAK,CAACG,QAAQ,CAACE,IAAI,CAACC,OAAO,KAAK,WAAW,EAAE;IAC/CtB,OAAO,CAACc,OAAO,CAACZ,OAAO,CAAC,CAACkB,KAAK,CAAC,CAAC;IAChC,OAAOJ,KAAK,CAACG,QAAQ;EACvB;EACA,OAAOI,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeX,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}