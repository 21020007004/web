{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getStudentsInfo, insertStudentInfo, deleteStudentInfo, getStudentInfoById, updateStudentInfoById } from '../../api/member/stduent-manager.js';\nexport default {\n  data() {\n    return {\n      //查询参数\n      queryStudentParam: {\n        pageSize: 10,\n        //页面的大小，默认为10\n        currentPage: 1,\n        //现在所处第几页\n        param: {\n          studentNumber: '',\n          //学号\n          name: '',\n          //姓名\n          studentClass: '' //班级\n        }\n      },\n\n      selectedDataId: [],\n      //被选中的数据id\n      selectionStatus: true,\n      //按钮的状态,false表示可以点击删除,true表示不能点击删除\n      dialogFormAddVisible: false,\n      //控制新增的对话框是否显示\n      dialogFormEditionVisible: false,\n      //控制编辑的对话框是否显示\n      total: -1,\n      //合计数据    \n      tableData: [],\n      //表格数据 \n      //表单数据\n      title: '新增',\n      form: {\n        studentId: '',\n        //学生id\n        studentNumber: '',\n        //学号\n        name: '',\n        //姓名\n        studentClass: '' //班级\n      }\n    };\n  },\n\n  created() {\n    this.getInfo();\n  },\n  methods: {\n    //向后台获取信息\n    async getInfo() {\n      const result = await getStudentsInfo(this.queryStudentParam);\n      this.tableData = result.data.data;\n      this.total = result.data.total;\n      console.log(result);\n    },\n    //处理页面大小的改变\n    handleSizeChange(e) {\n      this.queryStudentParam.pageSize = e;\n      this.getInfo();\n    },\n    //处理当前页数的改变\n    handleCurrentChange(e) {\n      console.log(e);\n      this.queryStudentParam.currentPage = e;\n      this.getInfo();\n    },\n    //打开新增对话框\n    openDialog() {\n      this.title = '新增';\n      this.form.studentNumber = '', this.form.name = '', this.form.studentClass = '';\n      this.dialogFormAddVisible = true;\n    },\n    //新增一条学生信息 \n    async insertInfo() {\n      const result = await insertStudentInfo(this.form);\n      console.log(result);\n      this.dialogFormAddVisible = false;\n      this.$message({\n        type: 'success',\n        message: '新增成功!'\n      });\n      this.getInfo();\n    },\n    //根据id查询学生信息,打开编辑对话框\n    async getInfoById(e) {\n      const result = await getStudentInfoById(e.studentId);\n      console.log(result);\n      this.title = '编辑';\n      this.form.studentId = result.data.data.studentId;\n      this.form.studentNumber = result.data.data.studentNumber;\n      this.form.name = result.data.data.name;\n      this.form.studentClass = result.data.data.studentClass;\n      this.dialogFormEditionVisible = true;\n    },\n    //编辑之后更新一条学生信息\n    async updateInfo() {\n      const result = await updateStudentInfoById(this.form);\n      console.log(result);\n      this.dialogFormEditionVisible = false;\n      this.getInfo();\n      this.$message({\n        type: 'success',\n        message: '操作成功!'\n      });\n    },\n    //删除一条学生信息\n    handleDelete(row) {\n      console.log(row);\n      this.$confirm('您确定删除吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const result = await deleteStudentInfo(row.studentId);\n        console.log(result);\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n        this.getInfo();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //处理数据的选择情况\n    handleSelectionChange(e) {\n      console.log(e);\n      if (e.length > 0) {\n        this.selectionStatus = false;\n      } else {\n        this.selectionStatus = true;\n      }\n      this.selectedDataId = [];\n      for (let i = 0; i < e.length; i++) {\n        this.selectedDataId.push(e[i].studentId);\n      }\n      console.log(this.selectedDataId);\n    },\n    //删除所选中的数据\n    deleteSelectedData() {\n      this.$confirm('您确定删除吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const result = await deleteStudentInfo(this.selectedDataId);\n        console.log(result);\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n        this.getInfo();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["getStudentsInfo","insertStudentInfo","deleteStudentInfo","getStudentInfoById","updateStudentInfoById","data","queryStudentParam","pageSize","currentPage","param","studentNumber","name","studentClass","selectedDataId","selectionStatus","dialogFormAddVisible","dialogFormEditionVisible","total","tableData","title","form","studentId","created","getInfo","methods","result","console","log","handleSizeChange","e","handleCurrentChange","openDialog","insertInfo","$message","type","message","getInfoById","updateInfo","handleDelete","row","$confirm","confirmButtonText","cancelButtonText","then","catch","handleSelectionChange","length","i","push","deleteSelectedData"],"sources":["src/views/member/StudentManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"root\">\r\n\r\n    <!-- 搜素栏 -->\r\n    <el-row  :gutter=\"20\">\r\n      <el-col :span=\"6\">\r\n        <div>\r\n          <span style=\"vertical-align: middle;\">学号：</span>\r\n          <el-input\r\n            placeholder=\"请输入学号\"\r\n            style=\"display: inline-block; width: 60%; vertical-align: middle;\"\r\n            size=\"small\"\r\n            v-model=\"queryStudentParam.param.studentNumber\"\r\n            >\r\n          </el-input>\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <div>\r\n          <span style=\"vertical-align: middle;\">姓名：</span>\r\n          <el-input\r\n            placeholder=\"请输入姓名\"\r\n            style=\"display: inline-block; width: 60%; vertical-align: middle;\"\r\n            size=\"small\"\r\n            v-model=\"queryStudentParam.param.name\"\r\n            >\r\n          </el-input>\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <div>\r\n          <span style=\"vertical-align: middle;\">班级：</span>\r\n          <el-input\r\n            placeholder=\"请输入班级\"\r\n            style=\"display: inline-block; width: 60%; vertical-align: middle;\"\r\n            size=\"small\"\r\n            v-model=\"queryStudentParam.param.studentClass\"\r\n            >\r\n          </el-input>\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <div>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"getInfo\">查 询</el-button>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"openDialog()\">新 增</el-button>\r\n          <el-button type=\"danger\" @click=\"deleteSelectedData()\" plain :disabled =\"selectionStatus\" size=\"small\">删 除</el-button>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 数据表格 -->\r\n    <el-table\r\n      :data=\"tableData\"\r\n      border\r\n      style=\"width: 100%\"\r\n      height=\"70vh\"\r\n      @selection-change=\"handleSelectionChange\">\r\n        <el-table-column\r\n          type=\"selection\"\r\n          width=\"55\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"studentNumber\"\r\n            label=\"学号\"\r\n            width=\"200%\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"name\"\r\n            label=\"姓名\"\r\n            width=\"200%\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"studentClass\"\r\n            label=\"班级\"\r\n            width=\"200%\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"dateTime\"\r\n            label=\"最后操作时间\"\r\n            width=\"300%\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            fixed=\"right\"\r\n            label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              @click=\"getInfoById(scope.row)\">编辑</el-button>\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"queryStudentParam.currentPage\"\r\n      :page-sizes=\"[5,10, 15, 20, 25]\"\r\n      :page-size=\"queryStudentParam.pageSize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n      style=\"margin-top: 14px;\">\r\n    </el-pagination>\r\n\r\n    <!-- 对话框（新增） -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormAddVisible\" style=\"width: 50%; margin: 0 auto;\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"学号：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.studentNumber\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.studentClass\" autocomplete=\"off\" style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormAddVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"insertInfo()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 对话框（编辑） -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormEditionVisible\" style=\"width: 50%; margin: 0 auto;\">\r\n      <el-form :model=\"form\">\r\n        <el-form-item label=\"学号：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.studentNumber\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级：\" label-width=\"60px\">\r\n          <el-input v-model=\"form.studentClass\" autocomplete=\"off\" style=\"width: 250px;\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormEditionVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateInfo()\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\n  import { \r\n    getStudentsInfo, \r\n    insertStudentInfo, \r\n    deleteStudentInfo,\r\n    getStudentInfoById,\r\n    updateStudentInfoById \r\n  } from '../../api/member/stduent-manager.js'\r\n  export default {\r\n    data() {\r\n      return {\r\n        //查询参数\r\n        queryStudentParam: {\r\n          pageSize: 10,                   //页面的大小，默认为10\r\n          currentPage: 1,                 //现在所处第几页\r\n          param: {\r\n            studentNumber: '',            //学号\r\n            name: '',                     //姓名\r\n            studentClass: ''              //班级\r\n          }\r\n        },\r\n        selectedDataId: [],               //被选中的数据id\r\n        selectionStatus: true,            //按钮的状态,false表示可以点击删除,true表示不能点击删除\r\n        dialogFormAddVisible: false,      //控制新增的对话框是否显示\r\n        dialogFormEditionVisible: false,  //控制编辑的对话框是否显示\r\n        total: -1,                        //合计数据    \r\n        tableData: [],                    //表格数据 \r\n        //表单数据\r\n        title: '新增',\r\n        form: {\r\n          studentId: '',                  //学生id\r\n          studentNumber: '',              //学号\r\n          name: '',                       //姓名\r\n          studentClass: ''                //班级\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.getInfo()\r\n    },\r\n    methods: {\r\n      //向后台获取信息\r\n      async getInfo() {\r\n        const result = await getStudentsInfo(this.queryStudentParam)\r\n        this.tableData = result.data.data\r\n        this.total = result.data.total\r\n        console.log(result)\r\n      },\r\n\r\n      //处理页面大小的改变\r\n      handleSizeChange(e) {\r\n        this.queryStudentParam.pageSize = e\r\n        this.getInfo()\r\n      },\r\n      //处理当前页数的改变\r\n      handleCurrentChange(e) {\r\n        console.log(e)\r\n        this.queryStudentParam.currentPage = e\r\n        this.getInfo()\r\n      },\r\n\r\n      //打开新增对话框\r\n      openDialog() {\r\n        this.title = '新增'\r\n        this.form.studentNumber = '',\r\n        this.form.name = '',\r\n        this.form.studentClass = ''\r\n        this.dialogFormAddVisible = true\r\n      },\r\n      //新增一条学生信息 \r\n      async insertInfo() {\r\n        const result = await insertStudentInfo(this.form)\r\n        console.log(result)\r\n        this.dialogFormAddVisible = false\r\n        this.$message({\r\n            type: 'success',\r\n            message: '新增成功!'\r\n          })\r\n        this.getInfo()\r\n      },\r\n\r\n      //根据id查询学生信息,打开编辑对话框\r\n      async getInfoById(e) {\r\n        const result = await getStudentInfoById(e.studentId)\r\n        console.log(result)\r\n        this.title = '编辑'\r\n        this.form.studentId = result.data.data.studentId\r\n        this.form.studentNumber = result.data.data.studentNumber\r\n        this.form.name = result.data.data.name\r\n        this.form.studentClass = result.data.data.studentClass\r\n        this.dialogFormEditionVisible = true\r\n      },\r\n      //编辑之后更新一条学生信息\r\n      async updateInfo() {\r\n        const result = await updateStudentInfoById(this.form)\r\n        console.log(result)\r\n        this.dialogFormEditionVisible = false\r\n        this.getInfo()\r\n        this.$message({\r\n            type: 'success',\r\n            message: '操作成功!'\r\n        })\r\n      },\r\n\r\n      //删除一条学生信息\r\n      handleDelete(row) {\r\n        console.log(row)\r\n        this.$confirm('您确定删除吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {   \r\n          const result = await deleteStudentInfo(row.studentId)\r\n          console.log(result)\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!'\r\n          })\r\n          this.getInfo()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })        \r\n        })\r\n      },\r\n      \r\n      //处理数据的选择情况\r\n      handleSelectionChange(e) {\r\n        console.log(e)\r\n        if (e.length > 0) {\r\n          this.selectionStatus = false\r\n        } else {\r\n          this.selectionStatus = true\r\n        }\r\n        this.selectedDataId = []\r\n        for (let i = 0; i < e.length; i++) {\r\n          this.selectedDataId.push(e[i].studentId)\r\n        }\r\n        console.log(this.selectedDataId)\r\n      },\r\n      //删除所选中的数据\r\n      deleteSelectedData() {\r\n        this.$confirm('您确定删除吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          const result = await deleteStudentInfo(this.selectedDataId)\r\n          console.log(result)\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!'\r\n          })\r\n          this.getInfo()\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })        \r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .root {\r\n    text-align: center;\r\n  }\r\n  .el-row {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}