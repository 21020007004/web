{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCourseByCondition, getAllPlace, insertANewCourse, updateCourse, deleteCourse, getCourseSwitchStatus, updateCourseStatus } from '../../api/course/course.js';\nimport { getAllTeacher } from '../../api/member/teacher-manager.js';\nexport default {\n  data() {\n    return {\n      //swith数据\n      courseSwitchStatus: '',\n      //查询参数\n      queryStudentParam: {\n        pageSize: 10,\n        //页面的大小，默认为10\n        currentPage: 1,\n        //现在所处第几页\n        param: {\n          name: '',\n          //课程名称\n          teacherName: '' //教师名称\n        }\n      },\n\n      selectedDataId: [],\n      //被选中的数据id\n      selectionStatus: true,\n      //按钮的状态,false表示可以点击删除,true表示不能点击删除\n      dialogFormAddVisible: false,\n      //控制新增的对话框是否显示\n      dialogFormEditionVisible: false,\n      //控制编辑的对话框是否显示\n      total: -1,\n      //合计数据    \n      tableData: [],\n      //表格数据 \n      //可以取的学分\n      credits: ['1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0'],\n      //表单数据\n      title: '新增',\n      form: {\n        name: '',\n        //课程名称\n        teacherId: '',\n        //教师id\n        teacherName: '',\n        //教师名称\n        credit: '',\n        //学分\n        hour: '',\n        //学时\n        time: '',\n        //上课时间\n        placeId: '',\n        //上课地点id\n        placeName: '',\n        //上课地点\n        description: '',\n        //课程描述\n        courseStatusId: '5',\n        //课程状态id\n        courseStatusName: '待选' //课程状态\n      },\n\n      //上课地点\n      place: [],\n      //所有教师\n      teacher: []\n    };\n  },\n  created() {\n    this.getCourseSwitchStatus();\n    this.getInfo();\n  },\n  methods: {\n    //向后台获取信息\n    async getInfo() {\n      const result = await getCourseByCondition(this.queryStudentParam);\n      this.tableData = result.data.data;\n      this.total = result.data.total;\n      console.log(result);\n    },\n    //获取选课是否开启的状态信息\n    async getCourseSwitchStatus() {\n      const result = await getCourseSwitchStatus();\n      if (result.data.code === 1) {\n        this.courseSwitchStatus = result.data.data;\n      }\n    },\n    //获取所有地点\n    async getPlace() {\n      const result = await getAllPlace();\n      this.place = result.data.data;\n    },\n    //获取所有教师信息\n    async getTeacher() {\n      const result = await getAllTeacher();\n      this.teacher = result.data.data;\n    },\n    //处理页面大小的改变\n    handleSizeChange(e) {\n      this.queryStudentParam.pageSize = e;\n      this.getInfo();\n    },\n    //处理当前页数的改变\n    handleCurrentChange(e) {\n      console.log(e);\n      this.queryStudentParam.currentPage = e;\n      this.getInfo();\n    },\n    //批量修改课程状态信息\n    async updateCourseStatus(courseSwitchStatus) {\n      const result = await updateCourseStatus(courseSwitchStatus);\n      console.log(result);\n    },\n    //处理切换按钮点击事件\n    handleSwitchChagne(e) {\n      console.log(e);\n      console.log(this.courseSwitchStatus);\n      if (e === '1') {\n        this.$confirm('您确定开启选课吗？开启后，所有待选课程将激活，变为可选状态。', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          this.courseSwitchStatus = '1';\n          this.updateCourseStatus(this.courseSwitchStatus);\n          this.getInfo();\n          this.$message({\n            type: 'success',\n            message: '选课已开启'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消开启'\n          });\n          this.courseSwitchStatus = '0';\n        });\n      }\n      if (e === '0') {\n        this.$confirm('您确定关闭选课吗？关闭后，所有可选课程将处于授课状态。', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          this.courseSwitchStatus = '0';\n          this.updateCourseStatus(this.courseSwitchStatus);\n          this.getInfo();\n          this.$message({\n            type: 'success',\n            message: '选课已关闭，开始进入授课'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消关闭'\n          });\n          this.courseSwitchStatus = '1';\n        });\n      }\n    },\n    //打开新增对话框\n    openDialog() {\n      this.getPlace();\n      this.getTeacher();\n      this.title = '新增';\n      this.form.studentNumber = '', this.form.name = '', this.form.studentClass = '';\n      this.dialogFormAddVisible = true;\n    },\n    //新增一条学生信息 \n    async insertInfo() {\n      const result = await insertANewCourse(this.form);\n      console.log(result);\n      this.dialogFormAddVisible = false;\n      this.$message({\n        type: 'success',\n        message: '新增成功!'\n      });\n      this.getInfo();\n    },\n    //根据id查询课程信息,打开编辑对话框\n    async getInfoById(e) {\n      if (e.courseStatusName !== '等待课程安排' && e.courseStatusName !== '待选') {\n        this.$message({\n          type: 'warning',\n          message: '课程未处于等待课程安排或待选阶段，不能排课哦~'\n        });\n        return;\n      }\n      console.log(e);\n      this.title = '排课';\n      this.form = e;\n      this.getPlace();\n      this.getTeacher();\n      this.dialogFormEditionVisible = true;\n    },\n    //编辑之后更新一条学生信息\n    async updateInfo() {\n      if (this.form.placeId == null || this.form.time == null) {\n        this.$message({\n          type: 'warning',\n          message: '排课的地点和上课时间不能为空数据！'\n        });\n        return;\n      }\n      this.form.courseStatusId = '5', this.form.courseStatusName = '待选';\n      const result = await updateCourse(this.form);\n      console.log(result);\n      this.dialogFormEditionVisible = false;\n      this.getInfo();\n      this.$message({\n        type: 'success',\n        message: '操作成功!'\n      });\n    },\n    //结课\n    async endCourse(row) {\n      if (row.courseStatusName !== '授课中') {\n        this.$message({\n          type: 'warning',\n          message: '课程处于授课中才能选择结课哦~'\n        });\n        return;\n      }\n      this.$confirm('您确定结课吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        this.form = row;\n        this.form.courseStatusId = '3';\n        const result = await updateCourse(this.form);\n        console.log(result);\n        this.$message({\n          type: 'success',\n          message: '操作成功!'\n        });\n        this.getInfo();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消操作'\n        });\n      });\n    },\n    //删除一条课程信息\n    deleteCourse(row) {\n      console.log(row);\n      if (row.courseStatusName !== '等待课程安排' && row.courseStatusName !== '待选') {\n        this.$message({\n          type: 'warning',\n          message: '课程处在可选、授课中或结课状态，不能删除！'\n        });\n        return;\n      }\n      this.$confirm('您确定删除吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const result = await deleteCourse(row);\n        console.log(result);\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        });\n        this.getInfo();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //处理数据的选择情况\n    handleSelectionChange(e) {\n      console.log(e);\n      if (e.length > 0) {\n        this.selectionStatus = false;\n      } else {\n        this.selectionStatus = true;\n      }\n      this.selectedDataId = [];\n      for (let i = 0; i < e.length; i++) {\n        this.selectedDataId.push(e[i].studentId);\n      }\n      console.log(this.selectedDataId);\n    }\n  }\n};","map":{"version":3,"names":["getCourseByCondition","getAllPlace","insertANewCourse","updateCourse","deleteCourse","getCourseSwitchStatus","updateCourseStatus","getAllTeacher","data","courseSwitchStatus","queryStudentParam","pageSize","currentPage","param","name","teacherName","selectedDataId","selectionStatus","dialogFormAddVisible","dialogFormEditionVisible","total","tableData","credits","title","form","teacherId","credit","hour","time","placeId","placeName","description","courseStatusId","courseStatusName","place","teacher","created","getInfo","methods","result","console","log","code","getPlace","getTeacher","handleSizeChange","e","handleCurrentChange","handleSwitchChagne","$confirm","confirmButtonText","cancelButtonText","type","then","$message","message","catch","openDialog","studentNumber","studentClass","insertInfo","getInfoById","updateInfo","endCourse","row","handleSelectionChange","length","i","push","studentId"],"sources":["src/views/course/TeachingArrangement.vue"],"sourcesContent":["<template>\r\n    <div class=\"root\">\r\n  \r\n      <!-- 搜素栏 -->\r\n      <el-row  :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <div>\r\n            <span style=\"vertical-align: middle;\">课程名称：</span>\r\n            <el-input\r\n              placeholder=\"请输入课程名称\"\r\n              style=\"display: inline-block; width: 60%; vertical-align: middle;\"\r\n              size=\"small\"\r\n              v-model=\"queryStudentParam.param.name\"\r\n              >\r\n            </el-input>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <div>\r\n            <span style=\"vertical-align: middle;\">教师：</span>\r\n            <el-input\r\n              placeholder=\"请输入教师姓名\"\r\n              style=\"display: inline-block; width: 60%; vertical-align: middle;\"\r\n              size=\"small\"\r\n              v-model=\"queryStudentParam.param.teacherName\"\r\n              >\r\n            </el-input>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <div>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"getInfo\">查 询</el-button>\r\n            <el-button type=\"primary\" plain size=\"small\" @click=\"openDialog()\">新 增</el-button>\r\n          </div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <div style=\"padding-top: 8px;\">\r\n                <span style=\"vertical-align: middle;\">选 课：</span>\r\n                <el-switch\r\n                    v-model=\"courseSwitchStatus\"\r\n                    active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\"\r\n                    active-value=\"1\"\r\n                    inactive-value=\"0\"\r\n                    @change=\"handleSwitchChagne\">\r\n                </el-switch>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n  \r\n      <!-- 数据表格 -->\r\n      <el-table\r\n        :data=\"tableData\"\r\n        border\r\n        style=\"width: 100%\"\r\n        height=\"70vh\"\r\n        @selection-change=\"handleSelectionChange\">\r\n          <el-table-column\r\n              prop=\"name\"\r\n              label=\"课程名称\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"teacherName\"\r\n              label=\"教师\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"credit\"\r\n              label=\"学分\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"hour\"\r\n              label=\"学时\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"time\"\r\n              label=\"上课时间\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"placeName\"\r\n              label=\"上课地点\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              prop=\"courseStatusName\"\r\n              label=\"课程状态\"\r\n              width=\"125%\">\r\n          </el-table-column>\r\n          <el-table-column\r\n              fixed=\"right\"\r\n              label=\"操作\"\r\n              width=\"300%\">\r\n              <template slot-scope=\"scope\"\r\n              >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  @click=\"getInfoById(scope.row)\"\r\n                  type=\"primary\"\r\n                  plain>排课</el-button>\r\n                  <el-button\r\n                  size=\"mini\"\r\n                  type=\"warning\"\r\n                  plain\r\n                  @click=\"endCourse(scope.row)\">结课</el-button>\r\n                  <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  @click=\"deleteCourse(scope.row)\"\r\n                  plain>删除</el-button>\r\n              </template>\r\n          </el-table-column>\r\n      </el-table>\r\n  \r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryStudentParam.currentPage\"\r\n        :page-sizes=\"[5,10, 15, 20, 25]\"\r\n        :page-size=\"queryStudentParam.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        style=\"margin-top: 14px;\">\r\n      </el-pagination>\r\n  \r\n      <!-- 对话框（新增） -->\r\n      <el-dialog :title=\"title\" :visible.sync=\"dialogFormAddVisible\" style=\"width: 60%; margin: 0 auto; margin-top: -20px;\">\r\n       \r\n        <el-form :model=\"form\" size=\"small\">\r\n          <el-form-item label=\"课程名称：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.name\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"教师：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.teacherId\" placeholder=\"请选择教师\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in teacher\" :label=\"item.name\" :value=\"item.teacherId\" :key=\"item.teacherId\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"学分：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.credit\" placeholder=\"请选择学分\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in credits\" :label=\"item\" :value=\"item\" :key=\"item\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"学时：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.hour\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上课时间：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.time\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上课地点：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.placeId\" placeholder=\"请选择地点\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in place\" :label=\"item.placeName\" :value=\"item.placeId\" :key=\"item.placeId\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"简介：\" label-width=\"100px\">\r\n            <el-input type=\"textarea\" v-model=\"form.description\"  style=\"width: 250px; resize: none;\"/>\r\n            <!-- <textarea style=\"resize: none;width: 250px;height: 80px; border: 2px solid rgb(220,223,230);\"  v-model=\"form.description\"></textarea> -->\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <div slot=\"footer\">\r\n          <el-button @click=\"dialogFormAddVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"insertInfo()\">确 定</el-button>\r\n        </div>\r\n\r\n      </el-dialog>\r\n  \r\n      <!-- 对话框（编辑） -->\r\n      <el-dialog :title=\"title\" :visible.sync=\"dialogFormEditionVisible\" style=\"width: 60%; margin: 0 auto;\">\r\n        \r\n        <el-form :model=\"form\" size=\"small\">\r\n          <el-form-item label=\"课程名称：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.name\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"教师：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.teacherId\" placeholder=\"请选择教师\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in teacher\" :label=\"item.name\" :value=\"item.teacherId\" :key=\"item.teacherId\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"学分：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.credit\" placeholder=\"请选择学分\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in credits\" :label=\"item\" :value=\"item\" :key=\"item\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"学时：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.hour\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上课时间：\" label-width=\"100px\">\r\n            <el-input v-model=\"form.time\" autocomplete=\"off\"  style=\"width: 250px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"上课地点：\" label-width=\"100px\">\r\n            <el-select v-model=\"form.placeId\" placeholder=\"请选择地点\" style=\"width: 250px;\">\r\n                <el-option v-for=\"item in place\" :label=\"item.placeName\" :value=\"item.placeId\" :key=\"item.placeId\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"简介：\" label-width=\"100px\">\r\n            <el-input type=\"textarea\" v-model=\"form.description\"  style=\"width: 250px; resize: none;\"/>\r\n            <!-- <textarea style=\"resize: none;width: 250px;height: 80px; border: 2px solid rgb(220,223,230);\"  v-model=\"form.description\"></textarea> -->\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogFormEditionVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"updateInfo()\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n    </div>\r\n  </template>\r\n    \r\n  <script>\r\n    import { \r\n        getCourseByCondition,\r\n        getAllPlace,\r\n        insertANewCourse,\r\n        updateCourse,\r\n        deleteCourse,\r\n        getCourseSwitchStatus,\r\n        updateCourseStatus\r\n    } from '../../api/course/course.js'\r\n    import { getAllTeacher } from '../../api/member/teacher-manager.js'\r\n    export default {\r\n      data() {\r\n        return {\r\n            //swith数据\r\n            courseSwitchStatus: '',\r\n            //查询参数\r\n            queryStudentParam: {\r\n                pageSize: 10,                   //页面的大小，默认为10\r\n                currentPage: 1,                 //现在所处第几页\r\n                param: {\r\n                    name: '',                   //课程名称\r\n                    teacherName: ''             //教师名称\r\n                }\r\n            },\r\n            selectedDataId: [],                 //被选中的数据id\r\n            selectionStatus: true,              //按钮的状态,false表示可以点击删除,true表示不能点击删除\r\n            dialogFormAddVisible: false,        //控制新增的对话框是否显示\r\n            dialogFormEditionVisible: false,    //控制编辑的对话框是否显示\r\n            total: -1,                          //合计数据    \r\n            tableData: [],                      //表格数据 \r\n            //可以取的学分\r\n            credits: ['1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0'],\r\n            //表单数据\r\n            title: '新增',\r\n            form: {\r\n                name: '',                       //课程名称\r\n                teacherId: '',                  //教师id\r\n                teacherName: '',                //教师名称\r\n                credit: '',                     //学分\r\n                hour: '',                       //学时\r\n                time: '',                       //上课时间\r\n                placeId: '',                    //上课地点id\r\n                placeName: '',                  //上课地点\r\n                description: '',                //课程描述\r\n                courseStatusId: '5',            //课程状态id\r\n                courseStatusName: '待选'         //课程状态\r\n            },\r\n            //上课地点\r\n            place: [],\r\n            //所有教师\r\n            teacher: []\r\n        }\r\n      },\r\n      created() {\r\n        this.getCourseSwitchStatus()\r\n        this.getInfo()\r\n      },\r\n      methods: {\r\n        //向后台获取信息\r\n        async getInfo() {\r\n          const result = await getCourseByCondition(this.queryStudentParam)\r\n          this.tableData = result.data.data\r\n          this.total = result.data.total\r\n          console.log(result)\r\n        },\r\n        //获取选课是否开启的状态信息\r\n        async getCourseSwitchStatus() {\r\n          const result = await getCourseSwitchStatus()\r\n          if (result.data.code === 1) {\r\n            this.courseSwitchStatus = result.data.data\r\n          }\r\n        },  \r\n        //获取所有地点\r\n        async getPlace() {\r\n            const result = await getAllPlace()\r\n            this.place = result.data.data\r\n        },\r\n        //获取所有教师信息\r\n        async getTeacher() {\r\n            const result = await getAllTeacher()\r\n            this.teacher = result.data.data\r\n        },\r\n        //处理页面大小的改变\r\n        handleSizeChange(e) {\r\n          this.queryStudentParam.pageSize = e\r\n          this.getInfo()\r\n        },\r\n        //处理当前页数的改变\r\n        handleCurrentChange(e) {\r\n          console.log(e)\r\n          this.queryStudentParam.currentPage = e\r\n          this.getInfo()\r\n        },\r\n        //批量修改课程状态信息\r\n        async updateCourseStatus(courseSwitchStatus) {\r\n          const result = await updateCourseStatus(courseSwitchStatus)\r\n          console.log(result)\r\n        },\r\n        //处理切换按钮点击事件\r\n        handleSwitchChagne(e) {\r\n          console.log(e)\r\n          console.log(this.courseSwitchStatus)\r\n          if (e === '1') {\r\n            this.$confirm('您确定开启选课吗？开启后，所有待选课程将激活，变为可选状态。', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(async () => {   \r\n                this.courseSwitchStatus = '1' \r\n                this.updateCourseStatus(this.courseSwitchStatus)  \r\n                this.getInfo()\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '选课已开启'\r\n                })\r\n            }).catch(() => {\r\n                this.$message({\r\n                type: 'info',\r\n                message: '已取消开启'\r\n                })   \r\n                this.courseSwitchStatus = '0'     \r\n            })\r\n          }\r\n          if (e === '0') {\r\n            this.$confirm('您确定关闭选课吗？关闭后，所有可选课程将处于授课状态。', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(async () => {   \r\n                this.courseSwitchStatus = '0'  \r\n                this.updateCourseStatus(this.courseSwitchStatus)  \r\n                this.getInfo() \r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '选课已关闭，开始进入授课'\r\n                })\r\n            }).catch(() => {\r\n                this.$message({\r\n                type: 'info',\r\n                message: '已取消关闭'\r\n                })   \r\n                this.courseSwitchStatus = '1'     \r\n            })\r\n          }\r\n        },  \r\n  \r\n        //打开新增对话框\r\n        openDialog() {\r\n            this.getPlace()\r\n            this.getTeacher()\r\n            this.title = '新增'\r\n            this.form.studentNumber = '',\r\n            this.form.name = '',\r\n            this.form.studentClass = ''\r\n            this.dialogFormAddVisible = true\r\n        },\r\n        //新增一条学生信息 \r\n        async insertInfo() {\r\n          const result = await insertANewCourse(this.form)\r\n          console.log(result)\r\n          this.dialogFormAddVisible = false\r\n          this.$message({\r\n              type: 'success',\r\n              message: '新增成功!'\r\n            })\r\n          this.getInfo()\r\n        },\r\n  \r\n        //根据id查询课程信息,打开编辑对话框\r\n        async getInfoById(e) {\r\n            if (e.courseStatusName !== '等待课程安排' && e.courseStatusName !== '待选') {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '课程未处于等待课程安排或待选阶段，不能排课哦~'\r\n                })\r\n                return\r\n            }\r\n            console.log(e)\r\n            this.title = '排课'\r\n            this.form = e\r\n            this.getPlace()\r\n            this.getTeacher()\r\n            this.dialogFormEditionVisible = true\r\n        },\r\n        //编辑之后更新一条学生信息\r\n        async updateInfo() {\r\n            if (this.form.placeId == null || this.form.time == null) {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '排课的地点和上课时间不能为空数据！'\r\n                })\r\n                return\r\n            }\r\n            this.form.courseStatusId = '5',\r\n            this.form.courseStatusName = '待选'\r\n            const result = await updateCourse(this.form)\r\n            console.log(result)\r\n            this.dialogFormEditionVisible = false\r\n            this.getInfo()\r\n            this.$message({\r\n                type: 'success',\r\n                message: '操作成功!'\r\n            })\r\n        },\r\n  \r\n        //结课\r\n        async endCourse(row) {\r\n            if (row.courseStatusName !== '授课中') {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '课程处于授课中才能选择结课哦~'\r\n                })\r\n                return\r\n            }\r\n            this.$confirm('您确定结课吗？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(async () => {   \r\n                this.form = row\r\n                this.form.courseStatusId = '3'\r\n                const result = await updateCourse(this.form)\r\n                console.log(result)\r\n                this.$message({\r\n                type: 'success',\r\n                message: '操作成功!'\r\n                })\r\n                this.getInfo()\r\n            }).catch(() => {\r\n                this.$message({\r\n                type: 'info',\r\n                message: '已取消操作'\r\n                })        \r\n            })\r\n        },\r\n\r\n        //删除一条课程信息\r\n        deleteCourse(row) {\r\n          console.log(row)\r\n          if (row.courseStatusName !== '等待课程安排' && row.courseStatusName !== '待选') {\r\n            this.$message({\r\n                    type: 'warning',\r\n                    message: '课程处在可选、授课中或结课状态，不能删除！'\r\n            })\r\n            return\r\n          }\r\n          this.$confirm('您确定删除吗？', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(async () => {   \r\n            const result = await deleteCourse(row)\r\n            console.log(result)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n            this.getInfo()\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '已取消删除'\r\n            })        \r\n          })\r\n        },\r\n        \r\n        //处理数据的选择情况\r\n        handleSelectionChange(e) {\r\n          console.log(e)\r\n          if (e.length > 0) {\r\n            this.selectionStatus = false\r\n          } else {\r\n            this.selectionStatus = true\r\n          }\r\n          this.selectedDataId = []\r\n          for (let i = 0; i < e.length; i++) {\r\n            this.selectedDataId.push(e[i].studentId)\r\n          }\r\n          console.log(this.selectedDataId)\r\n        },\r\n\r\n      }\r\n    }\r\n  </script>\r\n  \r\n  <style scoped>\r\n    .root {\r\n      text-align: center;\r\n    }\r\n    .el-row {\r\n      margin-bottom: 16px;\r\n    }\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}